@mixin gradient($color_start, $color_end) {
    background: $color_start;
    background: -moz-linear-gradient(left, $color_start, $color_end 100%);
    background: -webkit-gradient(left top, right top, color-stop(0%, $color_start), color-stop(100%, $color_end));
    background: -webkit-linear-gradient(left, $color_start 0%, $color_end 100%);
    background: -o-linear-gradient(left, $color_start 0%, $color_end 100%);
    background: -ms-linear-gradient(left, $color_start 0%, $color_end 100%);
    background: linear-gradient(to right, $color_start 0%, $color_end 100%);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=$color_start, endColorstr=$color_end, GradientType=1);
}

@mixin gradient-radial($color_start, $color_end) {
    background: $color_start;
    background: -moz-radial-gradient(center, ellipse cover, $color_start 0%, $color_end 80%);
    background: -webkit-gradient(radial, center center, 0px, center center, 80%, color-stop(0%, $color_start), color-stop(800%, $color_end));
    background: -webkit-radial-gradient(center, ellipse cover, $color_start 0%, $color_end 80%);
    background: -o-radial-gradient(center, ellipse cover, $color_start 0%, $color_end 80%);
    background: -ms-radial-gradient(center, ellipse cover, $color_start 0%, $color_end 80%);
    background: radial-gradient(ellipse at center, $color_start 0%, $color_end 80%);
}

@mixin gradient-top($color_start, $color_end) {
    background: $color_start;
    background: -moz-linear-gradient(top, $color_start, $color_end 100%);
    background: -webkit-gradient(left top, left bottom, color-stop(0%, $color_start), color-stop(100%, $color_end));
    background: -webkit-linear-gradient(left, $color_start 0%, $color_end 100%);
    background: -o-linear-gradient(left, $color_start 0%, $color_end 100%);
    background: -ms-linear-gradient(left, $color_start 0%, $color_end 100%);
    background: linear-gradient(to bottom, $color_start 0%, $color_end 100%);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=$color_start, endColorstr=$color_end, GradientType=1);
}

@mixin rotate($deg) {
    -webkit-transform: rotate($deg);
    -moz-transform: rotate($deg);
    -ms-transform: rotate($deg);
    -o-transform: rotate($deg);
}

@mixin box-shadow($data) {
    -webkit-box-shadow: $data;
    -moz-box-shadow: $data;
    box-shadow: $data;
}

@mixin zoom($zoom) {
    zoom: $zoom;
    -ms-zoom: $zoom;
    -webkit-zoom: $zoom;
    -moz-transform: scale($zoom, $zoom);
    -moz-transform-origin: left center;
}


@mixin allPsudoSelector {

    &:hover,
    &:focus,
    &:active {
        @content;
    }
}


@mixin scrollbar($color) {
    .scrollbar {
        background: #F5F5F5;
        overflow-y: scroll;
    }

    .scrollbar::-webkit-scrollbar-track {
        box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
        border-radius: 10px;
        background-color: #F5F5F5;
    }

    .scrollbar::-webkit-scrollbar {
        width: 12px;
        background-color: #F5F5F5;
    }

    .scrollbar::-webkit-scrollbar-thumb {
        border-radius: 10px;
        box-shadow: inset 0 0 6px $primary;
        background-color: $color;
    }
}

@mixin scrollbars($size, $foreground-color, $background-color: mix($foreground-color, white, 50%)) {

    // For Google Chrome
    ::-webkit-scrollbar {
        width: $size;
        height: $size;
    }

    ::-webkit-scrollbar-thumb {
        background: $primary;
        border-radius: 4px;
    }
    
    ::-webkit-scrollbar-track {
        background: mix($primary, white, 50%);
    }

    // For Internet Explorer
    body {
        scrollbar-face-color: $foreground-color;
        scrollbar-track-color: $background-color;
    }
}

/*
This .scss loop will create "margin helpers" and "padding helpers" for use in your web projects.
It will generate several classes such as:
.m-r-10 which gives margin-right 10 pixels.
.m-r-15 gives MARGIN to the RIGHT 15 pixels.
.m-t-15 gives MARGIN to the TOP 15 pixels and so on.
.p-b-5 gives PADDING to the BOTTOM of 5 pixels
.p-l-40 gives PADDING to the LEFT of 40 pixels
The first letter is "m" or "p" for MARGIN or PADDING
Second letter is "t", "b", "l", or "r" for TOP, BOTTOM, LEFT, or RIGHT
Third letter is the number of spacing in pixels. Adjust the amounts generated by editing the $spaceamounts variable below.
*/

@mixin space-helper() {
    $spaceamounts: (5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 75, 100); // Adjust this to include the pixel amounts you need.
    $sides: (top, bottom, left, right); // Leave this variable alone

    @each $space in $spaceamounts {
        @each $side in $sides {
            .m#{str-slice($side, 0, 1)}-#{$space} {
                margin-#{$side}: #{$space}px !important;
            }

            .p#{str-slice($side, 0, 1)}-#{$space} {
                padding-#{$side}: #{$space}px !important;
            }
        }
    }
}